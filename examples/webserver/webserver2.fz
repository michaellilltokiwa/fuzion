# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion example webserver
#
# -----------------------------------------------------------------------

# webserver is a minimalistic webserver example using the networking
# facilities provided by Fuzion itself.
#
# To start this webserver in the interpreter, use:
#
#   fz -unsafeIntrinsics=on webserver2.fz
#
# Alternatively, compile it using the C backend and run the resulting
# executable:
#
#   fz -c webserver2.fz
#   ./webserver
#
webserver is
  port u16 := 8080
  server := net.server net.family.ipv6 net.protocol.tcp port

  for
    ar := net.server.accept, net.server.accept
    n in 1..
  while net.server.is_active
  do
    say "accepted connection: {ar}"

    for
      read := (net.channel net.server)
        .read 1
        .or (error "read error")
        .bind String (d -> String.type.from_bytes d)
      s := read.val, s + read.val
    while read.ok && read.val != "\n"
    else
      say s

    send200(data String) outcome unit is
      (net.channel net.server)
        .write """
          HTTP/1.1 200 OK
          Connection: close
          Server: Fuzion demo WebServer v0.02
          Content-Length: {data.byte_length}
          Content-Type: text/html

          {data}
        """.utf8
        .or (error "write error")

    _ := send200 "<html>Hello Fuzion $n!</html>"

    _ := (net.channel net.server)
      .close

    say "closed connection"

  unit
