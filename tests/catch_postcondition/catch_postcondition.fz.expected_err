
error 1: Postcondition `equals result-x x` does not hold after call
Call stack:
fuzion.type.runtime.type.fault.type.install_default.λ.call#1: $MODULE/fuzion/runtime/fault.fz:38:7:
      fuzion.sys.fatal_fault kind msg
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fuzion.runtime.fault.cause#1: $MODULE/eff/fallible.fz:35:6:
  => h e
-----^
fuzion.type.runtime.type.post_fault.type.install_default.λ.call#1: $MODULE/fuzion/runtime/post_fault.fz:39:7:
      fuzion.runtime.fault.cause ("postcondition", msg)).default
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fuzion.runtime.post_fault.cause#1: $MODULE/eff/fallible.fz:35:6:
  => h e
-----^
fuzion.runtime.postcondition_fault#1: $MODULE/fuzion/runtime/post_fault.fz:58:43:
public postcondition_fault(msg String) => post_fault.cause msg
------------------------------------------^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).post double: --CURDIR--/catch_postcondition.fz:38:9:
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).double#1: --CURDIR--/catch_postcondition.fz:37:7:
      post
------^^^^
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).loop: --CURDIR--/catch_postcondition.fz:43:21:
    for v := T.one, double v
--------------------^^^^^^
catch_postcondition.test#1 i32: --CURDIR--/catch_postcondition.fz:43:5:
    for v := T.one, double v
----^
catch_postcondition.λ.call: --CURDIR--/catch_postcondition.fz:291:8:
  say (test i32)
-------^^^^
catch_postcondition.loop.λ.call: --CURDIR--/catch_postcondition.fz:276:28:
           option tries[c].call
---------------------------^^^^
(fuzion.type.runtime.type.fault.type.try (option String)).catch#1.λ.call.λ.call: $MODULE/eff/fallible.fz:84:35:
        fallible.this.instate T v code_try (()->code_catch m.get.get)
----------------------------------^^^^^^^^
(fuzion.type.runtime.type.fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.fault.type.instate#4 (option String): <source position not available>:

(fuzion.type.runtime.type.fault.type.try (option String)).catch#1.λ.call: $MODULE/eff/fallible.fz:84:9:
        fallible.this.instate T v code_try (()->code_catch m.get.get)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(eff.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
(eff.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(eff.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
eff.type.lm.type.instate#4 (option String): <source position not available>:

eff.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
eff.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(fuzion.type.runtime.type.fault.type.try (option String)).catch#1: $MODULE/eff/fallible.fz:79:7:
      eff.lm.instate_self ()->
------^^^^^^^^^^^^^^^^^^^^^^^^
        m := eff.lm.env.new (option ERROR nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        v := fallible.this.new e->
--------^^^^^^^^^^^^^^^^^^^^^^^^^^
               m <- e
---------------^^^^^^
               fallible.this.type.abort
---------------^^^^^^^^^^^^^^^^^^^^^^^^
        fallible.this.instate T v code_try (()->code_catch m.get.get)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.test#1 i32: --CURDIR--/catch_postcondition.fz:277:11:
         .catch s->
----------^^^^^
catch_postcondition.λ.call: --CURDIR--/catch_postcondition.fz:146:38:
  tries array ()->String := [ (() -> test i32), (() -> test i16), (() -> test i64) ]
-------------------------------------^^^^
catch_postcondition.loop.λ.call: --CURDIR--/catch_postcondition.fz:276:28:
           option tries[c].call
---------------------------^^^^
(fuzion.type.runtime.type.fault.type.try (option String)).catch#1.λ.call.λ.call: $MODULE/eff/fallible.fz:84:35:
        fallible.this.instate T v code_try (()->code_catch m.get.get)
----------------------------------^^^^^^^^
(fuzion.type.runtime.type.fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.fault.type.instate#4 (option String): <source position not available>:

(fuzion.type.runtime.type.fault.type.try (option String)).catch#1.λ.call: $MODULE/eff/fallible.fz:84:9:
        fallible.this.instate T v code_try (()->code_catch m.get.get)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(eff.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
(eff.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(eff.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
eff.type.lm.type.instate#4 (option String): <source position not available>:

eff.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
eff.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(fuzion.type.runtime.type.fault.type.try (option String)).catch#1: $MODULE/eff/fallible.fz:79:7:
      eff.lm.instate_self ()->
------^^^^^^^^^^^^^^^^^^^^^^^^
        m := eff.lm.env.new (option ERROR nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        v := fallible.this.new e->
--------^^^^^^^^^^^^^^^^^^^^^^^^^^
               m <- e
---------------^^^^^^
               fallible.this.type.abort
---------------^^^^^^^^^^^^^^^^^^^^^^^^
        fallible.this.instate T v code_try (()->code_catch m.get.get)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop: --CURDIR--/catch_postcondition.fz:277:11:
         .catch s->
----------^^^^^
(fuzion.type.runtime.type.post_fault.type.try (option String)).catch#1.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:272:3:
  for
--^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

(fuzion.type.runtime.type.post_fault.type.try (option String)).catch#1.λ.call: $MODULE/eff/fallible.fz:84:9:
        fallible.this.instate T v code_try (()->code_catch m.get.get)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(eff.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
(eff.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(eff.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
eff.type.lm.type.instate#4 (option String): <source position not available>:

eff.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
eff.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(fuzion.type.runtime.type.post_fault.type.try (option String)).catch#1: $MODULE/eff/fallible.fz:79:7:
      eff.lm.instate_self ()->
------^^^^^^^^^^^^^^^^^^^^^^^^
        m := eff.lm.env.new (option ERROR nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        v := fallible.this.new e->
--------^^^^^^^^^^^^^^^^^^^^^^^^^^
               m <- e
---------------^^^^^^
               fallible.this.type.abort
---------------^^^^^^^^^^^^^^^^^^^^^^^^
        fallible.this.instate T v code_try (()->code_catch m.get.get)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.λ.call: --CURDIR--/catch_postcondition.fz:258:11:
         .catch s->
----------^^^^^
(fuzion.type.runtime.type.post_fault.type.try (option String)).catch#1.λ.call.λ.call: $MODULE/eff/fallible.fz:84:35:
        fallible.this.instate T v code_try (()->code_catch m.get.get)
----------------------------------^^^^^^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

(fuzion.type.runtime.type.post_fault.type.try (option String)).catch#1.λ.call: $MODULE/eff/fallible.fz:84:9:
        fallible.this.instate T v code_try (()->code_catch m.get.get)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(eff.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
(eff.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(eff.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
eff.type.lm.type.instate#4 (option String): <source position not available>:

eff.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
eff.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(fuzion.type.runtime.type.post_fault.type.try (option String)).catch#1: $MODULE/eff/fallible.fz:79:7:
      eff.lm.instate_self ()->
------^^^^^^^^^^^^^^^^^^^^^^^^
        m := eff.lm.env.new (option ERROR nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        v := fallible.this.new e->
--------^^^^^^^^^^^^^^^^^^^^^^^^^^
               m <- e
---------------^^^^^^
               fallible.this.type.abort
---------------^^^^^^^^^^^^^^^^^^^^^^^^
        fallible.this.instate T v code_try (()->code_catch m.get.get)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop: --CURDIR--/catch_postcondition.fz:258:11:
         .catch s->
----------^^^^^
(catch_postcondition.try_post (option String)).catch#1.h.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:253:3:
  for
--^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

(catch_postcondition.try_post (option String)).catch#1.h.λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
((catch_postcondition.try_post (option String)).catch#1.h.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
((catch_postcondition.try_post (option String)).catch#1.h.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
(catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#4 (option String): <source position not available>:

(catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1.h.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1.h: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1: --CURDIR--/catch_postcondition.fz:195:7:
      h.res
------^
(catch_postcondition.try_post (option String)).catch#1.h.try: --CURDIR--/catch_postcondition.fz:239:11:
         .catch s->
----------^^^^^
(catch_postcondition.try_post (option String)).catch#1.h.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:112:11:
          try
----------^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

(catch_postcondition.try_post (option String)).catch#1.h.λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
((catch_postcondition.try_post (option String)).catch#1.h.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
((catch_postcondition.try_post (option String)).catch#1.h.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
(catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#4 (option String): <source position not available>:

(catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1.h.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1.h: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1: --CURDIR--/catch_postcondition.fz:195:7:
      h.res
------^
catch_postcondition.loop: --CURDIR--/catch_postcondition.fz:239:11:
         .catch s->
----------^^^^^
(fuzion.runtime.post_fault.Effect_Call String).call: --CURDIR--/catch_postcondition.fz:234:3:
  for
--^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

(catch_postcondition.try_post String).catch#1.h.λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
((catch_postcondition.try_post String).catch#1.h.lm.instate_self#2 String).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#3 String).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#4 String).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
((catch_postcondition.try_post String).catch#1.h.lm.Effect_Call String).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
(catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#4 String: <source position not available>:

(catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#3 String: $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1.h.lm.instate_self#2 String: $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1.h: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1: --CURDIR--/catch_postcondition.fz:195:7:
      h.res
------^
(catch_postcondition.try_post String).infix ||#1: --CURDIR--/catch_postcondition.fz:206:40:
    infix || (code_catch String->T) => catch code_catch
---------------------------------------^^^^^
catch_postcondition.res2: --CURDIR--/catch_postcondition.fz:225:31:
  res2 => try_post (test i32) || (s->say "*** failed: $s ***"; test u64)
------------------------------^^
(fuzion.type.runtime.type.post_fault.type.instate#4 String).λ.call: --CURDIR--/catch_postcondition.fz:226:7:
  say res2
------^^^^
(fuzion.runtime.post_fault.Effect_Call String).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

(catch_postcondition.try_post String).catch#1.h.λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
((catch_postcondition.try_post String).catch#1.h.lm.instate_self#2 String).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#3 String).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#4 String).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
((catch_postcondition.try_post String).catch#1.h.lm.Effect_Call String).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
(catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#4 String: <source position not available>:

(catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#3 String: $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1.h.lm.instate_self#2 String: $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1.h: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1: --CURDIR--/catch_postcondition.fz:195:7:
      h.res
------^
catch_postcondition.res: --CURDIR--/catch_postcondition.fz:214:11:
         .catch s->
----------^^^^^
catch_postcondition.loop.h.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:217:7:
  say res
------^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

catch_postcondition.loop.h.λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
(catch_postcondition.loop.h.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(catch_postcondition.type.loop.type.h.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
(catch_postcondition.type.loop.type.h.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(catch_postcondition.loop.h.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
catch_postcondition.type.loop.type.h.type.lm.type.instate#4 (option String): <source position not available>:

catch_postcondition.type.loop.type.h.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
catch_postcondition.loop.h.try: --CURDIR--/catch_postcondition.fz:166:10:
    r := h.res
---------^
catch_postcondition.loop.h.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:112:11:
          try
----------^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

catch_postcondition.loop.h.λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
(catch_postcondition.loop.h.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(catch_postcondition.type.loop.type.h.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
(catch_postcondition.type.loop.type.h.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(catch_postcondition.loop.h.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
catch_postcondition.type.loop.type.h.type.lm.type.instate#4 (option String): <source position not available>:

catch_postcondition.type.loop.type.h.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
catch_postcondition.loop: --CURDIR--/catch_postcondition.fz:166:10:
    r := h.res
---------^
catch_postcondition.z.lm.instate_self#2 (option String): --CURDIR--/catch_postcondition.fz:162:3:
  for c in tries.indices do
--^
catch_postcondition.z: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
catch_postcondition.z.catch#1: --CURDIR--/catch_postcondition.fz:152:118:
    redef catch(s String) option String => {say "*** failed: $s ***"; c0 <- c0.get + 1; if c0.get < tries.count then z.res else nil}
---------------------------------------------------------------------------------------------------------------------^
catch_postcondition.z.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:113:18:
          (() -> catch m.get.get))
-----------------^^^^^
fuzion.type.runtime.type.post_fault.type.abort: $MODULE/effect.fz:122:14:
      nil => def()
-------------^^^
fuzion.type.runtime.type.post_fault.type.precall abort: $MODULE/effect.fz:267:3:
  pre
--^^^
    safety: effect.this.is_instated
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    safety: effect.this.env.abortable
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.z.λ.call.λ.call#1: --CURDIR--/catch_postcondition.fz:111:39:
            fuzion.runtime.post_fault.abort)
--------------------------------------^^^^^
fuzion.runtime.post_fault.cause#1: $MODULE/eff/fallible.fz:35:6:
  => h e
-----^
fuzion.runtime.postcondition_fault#1: $MODULE/fuzion/runtime/post_fault.fz:58:43:
public postcondition_fault(msg String) => post_fault.cause msg
------------------------------------------^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).post double: --CURDIR--/catch_postcondition.fz:38:9:
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).double#1: --CURDIR--/catch_postcondition.fz:37:7:
      post
------^^^^
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).loop: --CURDIR--/catch_postcondition.fz:43:21:
    for v := T.one, double v
--------------------^^^^^^
catch_postcondition.test#1 i32: --CURDIR--/catch_postcondition.fz:43:5:
    for v := T.one, double v
----^
catch_postcondition.λ.call: --CURDIR--/catch_postcondition.fz:146:38:
  tries array ()->String := [ (() -> test i32), (() -> test i16), (() -> test i64) ]
-------------------------------------^^^^
catch_postcondition.z.try: --CURDIR--/catch_postcondition.fz:151:43:
    redef try option String  => tries[c0].call
------------------------------------------^^^^
catch_postcondition.z.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:112:11:
          try
----------^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

catch_postcondition.z.λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
(catch_postcondition.z.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(catch_postcondition.type.z.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
(catch_postcondition.type.z.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(catch_postcondition.z.lm.Effect_Call (option String)).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
catch_postcondition.type.z.type.lm.type.instate#4 (option String): <source position not available>:

catch_postcondition.type.z.type.lm.type.instate#3 (option String): $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.z.lm.instate_self#2 (option String): $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.z: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
(catch_postcondition.ref handle_post String).λ.call.λ.call: --CURDIR--/catch_postcondition.fz:154:7:
  say z.res
------^
(fuzion.type.runtime.type.post_fault.type.instate#4 String).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call String).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

(catch_postcondition.ref handle_post String).λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
((catch_postcondition.ref handle_post String).lm.instate_self#2 String).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.handle_post.type String).lm.type.instate#3 String).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.handle_post.type String).lm.type.instate#4 String).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
((catch_postcondition.ref handle_post String).lm.Effect_Call String).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
(catch_postcondition.type.handle_post.type String).lm.type.instate#4 String: <source position not available>:

(catch_postcondition.type.handle_post.type String).lm.type.instate#3 String: $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.ref handle_post String).lm.instate_self#2 String: $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.anonymous: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
catch_postcondition.y.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:132:8:
  say (ref : handle_post String
-------^
(fuzion.type.runtime.type.post_fault.type.instate#4 String).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call String).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

catch_postcondition.y.λ.call: --CURDIR--/catch_postcondition.fz:107:36:
        (fuzion.runtime.post_fault.instate
-----------------------------------^^^^^^^
(catch_postcondition.y.lm.instate_self#2 String).λ.call: $MODULE/effect.fz:164:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(catch_postcondition.type.y.type.lm.type.instate#3 String).λ.call: $MODULE/effect.fz:143:17:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----------------^^^^
(catch_postcondition.type.y.type.lm.type.instate#4 String).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(catch_postcondition.y.lm.Effect_Call String).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
catch_postcondition.type.y.type.lm.type.instate#4 String: <source position not available>:

catch_postcondition.type.y.type.lm.type.instate#3 String: $MODULE/effect.fz:143:5:
    instate R e code (panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.y.lm.instate_self#2 String: $MODULE/effect.fz:164:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.y: --CURDIR--/catch_postcondition.fz:105:15:
    res := lm.instate_self ()->
--------------^^^^^^^^^^^^
fuzion.type.runtime.type.post_fault.type.precall abort: --CURDIR--/catch_postcondition.fz:124:7:
  say y.res
------^
catch_postcondition.λ.call#1: --CURDIR--/catch_postcondition.fz:85:37:
          fuzion.runtime.post_fault.abort)
------------------------------------^^^^^
fuzion.runtime.post_fault.cause#1: $MODULE/eff/fallible.fz:35:6:
  => h e
-----^
fuzion.runtime.postcondition_fault#1: $MODULE/fuzion/runtime/post_fault.fz:58:43:
public postcondition_fault(msg String) => post_fault.cause msg
------------------------------------------^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).post double: --CURDIR--/catch_postcondition.fz:38:9:
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).double#1: --CURDIR--/catch_postcondition.fz:37:7:
      post
------^^^^
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).loop: --CURDIR--/catch_postcondition.fz:43:21:
    for v := T.one, double v
--------------------^^^^^^
catch_postcondition.test#1 i32: --CURDIR--/catch_postcondition.fz:43:5:
    for v := T.one, double v
----^
catch_postcondition.λ.call: --CURDIR--/catch_postcondition.fz:86:10:
        (test i32)
---------^^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 String).λ.call: $MODULE/effect.fz:119:25:
    cf := e.Effect_Call code
------------------------^^^^
(fuzion.runtime.post_fault.Effect_Call String).call: $MODULE/effect.fz:210:18:
      set res := f()
-----------------^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

catch_postcondition: --CURDIR--/catch_postcondition.fz:81:34:
  say (fuzion.runtime.post_fault.instate
---------------------------------^^^^^^^

*** fatal errors encountered, stopping.
one error.
