# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test contracts_negative
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

contracts_negative is

  sqrt(a i32) i32
    pre
      a ≥ 0
    post
      (result * result ≤ a) && ((result+1) * (result+1) > a)
  is
    set result := 1
    for it in 0..99 do
      n := a / result
      set result := (result + n) / 2
    until (( result    * result     ≤ a) &&
           ((result+1) * (result+1) >  a)    )
    else
      say "*** error, sqrt diverges"

  say "sqrt(16) = {sqrt(16)}"
  say "sqrt(81) = {sqrt(81)}"
  say "sqrt(-16) = {sqrt(-16)}" // 1. should flag an error, precondition failed
