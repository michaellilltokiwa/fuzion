
--CURDIR--/type.fz:47:14: error 1: A type may not use a boxed (explicit 'ref') type as its outer type.
  x4 (ref v).e := panic "create void"   # error!
-------------^
The problem is that for a value type 'v' any inner constructor 'v.c'will always create a value of type 'v.c' even if called on an outer ref type, i.e., in 'rv ref v := v; rc := rv.c'the type of 'rc' will be 'v.c'.
Type with boxed outer type: '(ref v).e'
Boxed outer type          : 'ref v'
To solve this, remove the 'ref' modifier from the outer type or add 'ref' to the declaration of the outer feature.


--CURDIR--/type.fz:49:15: error 2: A type may not use a boxed (explicit 'ref') type as its outer type.
  f(a (ref v).e) is                     # error!
--------------^
The problem is that for a value type 'v' any inner constructor 'v.c'will always create a value of type 'v.c' even if called on an outer ref type, i.e., in 'rv ref v := v; rc := rv.c'the type of 'rc' will be 'v.c'.
Type with boxed outer type: '(ref v).e'
Boxed outer type          : 'ref v'
To solve this, remove the 'ref' modifier from the outer type or add 'ref' to the declaration of the outer feature.


--CURDIR--/type.fz:52:20: error 3: A type may not use a boxed (explicit 'ref') type as its outer type.
  g(a i32) (ref v).e is                # error!
-------------------^
The problem is that for a value type 'v' any inner constructor 'v.c'will always create a value of type 'v.c' even if called on an outer ref type, i.e., in 'rv ref v := v; rc := rv.c'the type of 'rc' will be 'v.c'.
Type with boxed outer type: '(ref v).e'
Boxed outer type          : 'ref v'
To solve this, remove the 'ref' modifier from the outer type or add 'ref' to the declaration of the outer feature.

3 errors.
