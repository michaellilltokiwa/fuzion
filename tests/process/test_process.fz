test_process =>

  # NYI type inference
  e array String := []
  op := fuzion.sys.process.create ["cat"] e
  match op
    p fuzion.sys.process.r_process =>
      p.write "Hello from the other side."
      say p.close_write
      say (p.read 100)
      # NYI
      # p.wait
    error => say "error"


  match fuzion.sys.process.create ["echo", "eecchhoo"] e
    p fuzion.sys.process.r_process =>
      say (p.read 100)
    error => say "error"

  match fuzion.sys.process.create ["printenv", "MYENVVAR"] ["MYENVVAR=something"]
    p fuzion.sys.process.r_process =>
      say (p.read 100)
    error => say "error"
