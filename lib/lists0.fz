#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature lists
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# lists -- unit type defining features related to list but not requiring an
# instance
#
#
lists is


  # create an empty list
  #
  empty<A> list<A> is
    nil


  # fmap lifts a function from A to B to a function from list<A> to list<B>
  #
  fmap<A, B> (f A -> B) list<A> -> list<B> is
    l -> l.map<B> f


  # monoid of lists with infix concatentation operation.
  #
  concatMonoid<A> : Monoid<list<A>> is

    # associative operation
    #
    infix âˆ™ (a, b list<A>) list<A> is a.concat b

    # equality
    #
    redef infix == (a, b list<A>) =>
      fuzion.std.panic "NYI: Lists.concatMonoid.infix ==, requires A : hasEquals"

    # identity element
    #
    e list<A> is
      nil
