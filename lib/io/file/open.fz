# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature io.file.open
#
# -----------------------------------------------------------------------


# effect for manipulating open files
# T is used to distinguish several open files
#
priv open(T type, priv fd i64, pub file_name String) : simple_effect is

  # writes the content of an array of bytes to a file opened as fd
  #
  # this might overwrite parts or all of an existing file.
  #
  write(content Sequence u8) ! io.file.write =>
    io.file.write.write fd content.as_array


  # reads all bytes from the file in the path
  # returns outcome array u8, a byte array representing the content of the file if the operation was successful
  # returns an error in case the operation fails
  #
  read outcome (array u8) ! io.file.read is
    io.file.read.read_file fd



# short hand to get the currently
# installed open effect
# for type T from the environment.
# see `use` on how to use this.
#
open(T type) =>
  (open T).env



# unit type used internally by open- and use-
# short hands which can be used when one does not need
# to distinguish between several open files.
priv open_unique_type is



# short hand to get the currently
# installed open effect
# from the environment.
# see `use` on how to use this.
#
open =>
  (open open_unique_type).env

