# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature float
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# float -- floating point values
#
#
# float is the abstract parent of concrete floating point features such as
# f32 or f64.
#
float<T: float<T>> : numeric<T>, hasInterval<T>, floats<T> is


  # preconditions for basic operations: true if the operation's result is
  # representable for the given values.  For IEEE_754, all operations are
  # defined for all values.
  #
  redef prefix +! bool is true
  redef prefix -! bool is true
  redef infix +! (other T) bool is true
  redef infix -! (other T) bool is true
  redef infix *! (other T) bool is true
  redef infix /! (other T) bool is true
  redef infix %! (other T) bool is true
  redef infix **!(other T) bool is true

  # IEEE_754 5.3.1
  roundToIntegralTiesToEven T is abstract
  roundToIntegralTiesToAway T is abstract
  roundToIntegralTowardZero T is abstract
  roundToIntegralTowardPositive T is abstract
  roundToIntegralTowardNegative T is abstract
  roundToIntegralExact T is abstract
  nextUp T is abstract
  nextDown T is abstract
  remainder(other T) T is abstract
  minNum(other T) T is abstract
  maxNum(other T) T is abstract
  minNumMag(other T) T is abstract
  maxNumMag(other T) T is abstract

  #  IEEE_754 5.3.2
  quantize(other T) T is abstract

  #  IEEE_754 5.3.3
  logBFormat is
  scaleB (logBFormat logBFormat) T is abstract
  logB logBFormat is abstract


  #  IEEE_754 5.4.1
  squareRoot T is abstract

  convertToIntegerTiesToEven<U>(exact bool) integer<U> is abstract
  convertToIntegerTowardZero<U>(exact bool) integer<U> is abstract
  convertToIntegerTowardPositive<U>(exact bool) integer<U> is abstract
  convertToIntegerTowardNegative<U>(exact bool) integer<U> is abstract
  convertToIntegerTiesToAway<U>(exact bool) integer<U> is abstract

  #  IEEE_754 5.4.2 NYI
  #  IEEE_754 5.4.3 NYI
  #  IEEE_754 5.5 NYI
  #  IEEE_754 5.6 comparisons partially NYI

  #  IEEE_754 5.7.2 NYI

  # class signalingNaN
  #   | quietNaN
  #   | negativeInfinity
  #   | negativeNormal
  #   | negativeSubnormal
  #   | negativeZero
  #   | positiveZero
  #   | positiveSubnormal
  #   | positiveNormal
  #   | positiveInfinity is intrinsic

  # isSignMinus =>
  #   match class
  #     signalingNaN => true
  #     quietNaN => true
  #     negativeInfinity => true
  #     negativeNormal => true
  #     negativeSubnormal => true
  #     negativeZero => true
  #     positiveZero => true
  #     positiveSubnormal => false
  #     positiveNormal => false
  #     positiveInfinity => false

  # # not zero, subnormal, infinite, or NaN
  # isNormal is
  # isFinite is
  # redef isZero =>
  #   match class
  #     signalingNaN => false
  #     quietNaN => false
  #     negativeInfinity => false
  #     negativeNormal => false
  #     negativeSubnormal => false
  #     negativeZero => true
  #     positiveZero => true
  #     positiveSubnormal => false
  #     positiveNormal => false
  #     positiveInfinity => false
  # isSubnormal bool is
  # isInfinite bool is
  # isNaN bool is
  # isSignaling bool is
  # isCanonical bool is
  # radixTwo is
  # radixTen is
  # radix radixTwo | radixTen is radixTwo
  # totalOrder(other T) is
  # totalOrderMag(other T) is

  # IEEE_754 5.7.3
  # sameQuantum(other T) is

  # IEEE_754 5.7.4 NYI
  # IEEE_754 5.8 NYI