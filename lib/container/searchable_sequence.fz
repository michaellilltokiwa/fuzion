# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature searchable_sequence
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# searchable_sequence -- a Sequence whose elements inherit from property.equatable
#
#
public searchable_sequence(public A type : property.equatable,
                           from Sequence A                   ) : Sequence A,
                                                                 property.equatable
is

  # create a list from this searchable_sequence.
  #
  public redef as_list => from.as_list


  # is this sequence known to be finite?  For infinite sequences, features like
  # count diverge.
  #
  public redef finite => from.finite


  # equality check implementation for inherited property.equatable
  #
  public fixed redef type.equality(a, b container.searchable_sequence A) bool =>
    aa := a.as_array
    ba := b.as_array
    aa.count = ba.count
      && (0..(a.count - 1) âˆ€ (i -> aa[i] = ba[i]))
