# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature handles
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# onewayMonad is the heir feature of all one-way monads. A one-way monad is
# a monadic feature that can be accessed only throuh the environment and
# that will be replaced in the environment whenever a new instance is created.
#
onewayMonad /* <X> NYI: the type wrapped by this monad */ (

  # code to run while this monad is installed. Iff nil, do not
  # run any code but replace the installed monad instancea by this.
  #
  r option<()->unit>
  )
is

  match r
    _ nil      => replace
    f Function => run f

  # install this one-way monad in the current context
  private install unit is intrinsic

  # remove this one-way monad in the current context
  private remove  unit is intrinsic

  # replace one-way monad in the current context by this
  private replace unit is intrinsic

  # execute the code of 'f' in the context of this one-way monad
  #
  private run<R>(f () -> R) R is
    install
    res := f()
    remove
    res

  # NYI: typical monad operations bind, return, fmap, etc. are missing.
