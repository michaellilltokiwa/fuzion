# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature array(l1,l2,l3)
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# array(length0, length1, length2)
#
# array provides three-dimensional immutable arrays. These are actually
# one-dimensional immutable arrays with an additional access function with
# three index parameters.
#
array3<T>(length0, length1, length2 i32,
          init3 (i32, i32, i32) -> T)
 : array<T> (sys.array<T> length0*length1*length2)
  pre
    safety: length0 >= 0,
    safety: length1 >= 0,
    safety: length2 >= 0,
    safety: length0 *? length1 *? length2 >=? 0
is


  # indices range in first dimension
  #
  indices0 => 0..length0-1


  # indices range in second dimension
  #
  indices1 => 0..length1-1


  # indices range in third  dimension
  #
  indices2 => 0..length2-1


  for i1 in 0..length0-1 do
    for i2 in 0..length1-1 do
      for i3 in 0..length2-1 do
        internalArray[(i1 * length1 + i2) * length2 + i3] := init3 i1, i2, i3

  index [ ] (i1, i2, i3 i32) T
    pre
      safety: 0 <= i1 < length0,
      safety: 0 <= i2 < length1,
      safety: 0 <= i3 < length2
  is
    array3.this[(i1 * length1 + i2) * length2 + i3]
